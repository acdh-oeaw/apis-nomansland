// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.155.1/containers/python-3-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Python version: 3, 3.8, 3.7, 3.6 
{
	"name": "Python 3.6 & Apis-core & mariadb",
	// Set *default* container specific settings.json values on container create.
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": { 
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.8",
			// Options
			"NODE_VERSION": "none"
		}
	},
	"containerUser": "vscode",
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"python.pythonPath": "/usr/local/bin/python",
		"python.linting.enabled": true,
		"python.linting.pylintEnabled": true,
		"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
		"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
		"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
		"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
		"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
		"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
		"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
		"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
		"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
		"python.testing.pytestPath": "/usr/local/py-utils/bin/pytest"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"mtxr.sqltools",
		"mtxr.sqltools-driver-pg",
		"mhutchie.git-graph",
		"ms-azuretools.vscode-docker",
		"GitHub.copilot"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		8000,
		3306
	],
	"mounts": [
		"source=/var/home/sennierer/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached"
	  ],
	"workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/${localWorkspaceFolderBasename},type=bind,Z",
	"runArgs": [
	  //"--userns=keep-id",
	  "--pod=nomansland-dev"
	  //"--env-file=.devcontainer/development.env"
	],
	"remoteEnv": {
		"DATABASE_URL": "mysql://apis:apis@127.0.0.1:3306/apis",
		"APIS_BIBSONOMY_USER": "2658719",
		"APIS_BIBSONOMY_PASSWORD": "NqQHdypNbEOolyaFJkyKeel2"
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "poetry config virtualenvs.create false && poetry lock && poetry install",
	//"postStartCommand": "poetry run python manage.py migrate",
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}